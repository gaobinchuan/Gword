#!/bin/bash
# Name   : Gwords
# Author : Gaobin
# Github : gaob13/Gwords
#
# http://blog.bitfluent.com/post/27983389/git-utilities-you-cant-live-without
# http://superuser.com/questions/31744/how-to-get-git-completion-bash-to-work-on-mac-os-x
# http://tammersaleh.com/posts/a-better-rvm-bash-prompt
# https://rvm.beginrescueend.com/workflow/prompt/
# 17:39:15 henrik@Nyx project_dir ree-1.8.7@project master*$ 

function __rvm_prompt {
  if hash rvm-prompt 2>&- ; then
    echo " `rvm-prompt i v g s`"
  fi
}

function __git_prompt() {
  local git_status="`git status -unormal 2>&1`"
  if ! [[ "$git_status" =~ Not\ a\ git\ repo || "$git_status" =~ not\ installed ]] ; then
    local git_ps1=`echo "$git_status"| head -1 | sed 's/On branch //g'`
    if [[ "$git_status" =~ nothing\ to\ commit ]]; then
      local ansi=32
      git_ps1=$git_ps1'='
    elif [[ "$git_status" =~ nothing\ added\ to\ commit\ but\ untracked\ files\ present ]]; then
      local ansi=34
      git_ps1=$git_ps1'+'
    else
      git_ps1=$git_ps1'*'
      local ansi=33
    fi
    echo "$git_ps1"
  fi
}

#NOT IN USE ANY MORE
function __git_ps1__OLD {
  local git_status=`git status -unormal 2>/dev/null`
  echo $git_status | head -1 | sed 's/On Branch //g'
}

#NOT IN USE ANY MORE
function __git_prompt__OLD {
  GIT_PS1_SHOWDIRTYSTATE=1
  __git_ps1 " %s" | sed 's/ \([+*]\{1,\}\)$/\1/'
}

#NOT IN USE ANY MORE
# Only show username@server over SSH.
function __name_and_server {
  echo "`whoami`@`hostname -s` "
}

GAOBIN_WORD_COUNT=`cat ~/.Gwords/list.txt | wc -l`

function word {
  local rand=`head -200 /dev/urandom | cksum | cut -f1 -d" "`
  local sn=$(( rand % GAOBIN_WORD_COUNT / 2 ))
  local ind=$(( sn * 2 + 1))
  local en=`sed -n $(( ind + 0 )),1p ~/.Gwords/list.txt | tr [:space:] ' '`
  local zh=`sed -n $(( ind + 1 )),1p ~/.Gwords/list.txt | tr [:space:] ' '`
  echo $en `tput setaf 3`:`tput setaf 4` $zh
}

bash_prompt() {

  # regular colors
  local K="\[\033[0;30m\]"    # black
  local R="\[\033[0;31m\]"    # red
  local G="\[\033[0;32m\]"    # green
  local Y="\[\033[0;33m\]"    # yellow
  local B="\[\033[0;34m\]"    # blue
  local M="\[\033[0;35m\]"    # magenta
  local C="\[\033[0;36m\]"    # cyan
  local W="\[\033[0;37m\]"    # white

  # emphasized (bolded) colors
  local BK="\[\033[1;30m\]"
  local BR="\[\033[1;31m\]"
  local BG="\[\033[1;32m\]"
  local BY="\[\033[1;33m\]"
  local BB="\[\033[1;34m\]"
  local BM="\[\033[1;35m\]"
  local BC="\[\033[1;36m\]"
  local BW="\[\033[1;37m\]"

  # reset
  local RESET="\[\033[0;37m\]"

#  PS1="$Y\u@\h $BG\$(__git_prompt)  "$BC'$(word)'"   $BR\t\n$BY\w$BW\$`tput sgr0` "
  PS1="$Y\u@\h "$BC'$(word)'" $BG\$(__git_prompt) $BY\w $BR\t $BW\$`tput sgr0`\n"

}

bash_prompt
unset bash_prompt
